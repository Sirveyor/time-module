Python 3.12.2 (tags/v3.12.2:6abddd9, Feb  6 2024, 21:26:36) [MSC v.1937 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license()" for more information.
from sqlalchemy import create_engine
engine = create_engine("sqlite:///.data/books.db", echo=True)
conn = engine.connect()
Traceback (most recent call last):
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 146, in __init__
    self._dbapi_connection = engine.raw_connection()
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 3304, in raw_connection
    return self.pool.connect()
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\pool\base.py", line 449, in connect
    return _ConnectionFairy._checkout(self)
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\pool\base.py", line 1263, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\pool\base.py", line 712, in checkout
    rec = pool._do_get()
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\pool\impl.py", line 179, in _do_get
    with util.safe_reraise():
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\pool\impl.py", line 177, in _do_get
    return self._create_connection()
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\pool\base.py", line 390, in _create_connection
    return _ConnectionRecord(self)
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\pool\base.py", line 674, in __init__
    self.__connect()
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\pool\base.py", line 900, in __connect
    with util.safe_reraise():
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\pool\base.py", line 896, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\engine\create.py", line 643, in connect
    return dialect.connect(*cargs, **cparams)
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 617, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)
sqlite3.OperationalError: unable to open database file

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "<pyshell#2>", line 1, in <module>
    conn = engine.connect()
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 3280, in connect
    return self._connection_cls(self)
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 148, in __init__
    Connection._handle_dbapi_exception_noconnection(
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2444, in _handle_dbapi_exception_noconnection
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 146, in __init__
    self._dbapi_connection = engine.raw_connection()
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 3304, in raw_connection
    return self.pool.connect()
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\pool\base.py", line 449, in connect
    return _ConnectionFairy._checkout(self)
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\pool\base.py", line 1263, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\pool\base.py", line 712, in checkout
    rec = pool._do_get()
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\pool\impl.py", line 179, in _do_get
    with util.safe_reraise():
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\pool\impl.py", line 177, in _do_get
    return self._create_connection()
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\pool\base.py", line 390, in _create_connection
    return _ConnectionRecord(self)
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\pool\base.py", line 674, in __init__
    self.__connect()
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\pool\base.py", line 900, in __connect
    with util.safe_reraise():
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\pool\base.py", line 896, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\engine\create.py", line 643, in connect
    return dialect.connect(*cargs, **cparams)
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 617, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) unable to open database file
(Background on this error at: https://sqlalche.me/e/20/e3q8)
conn = engine.connect()
Traceback (most recent call last):
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 146, in __init__
    self._dbapi_connection = engine.raw_connection()
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 3304, in raw_connection
    return self.pool.connect()
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\pool\base.py", line 449, in connect
    return _ConnectionFairy._checkout(self)
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\pool\base.py", line 1263, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\pool\base.py", line 712, in checkout
    rec = pool._do_get()
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\pool\impl.py", line 179, in _do_get
    with util.safe_reraise():
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\pool\impl.py", line 177, in _do_get
    return self._create_connection()
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\pool\base.py", line 390, in _create_connection
    return _ConnectionRecord(self)
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\pool\base.py", line 674, in __init__
    self.__connect()
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\pool\base.py", line 900, in __connect
    with util.safe_reraise():
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\pool\base.py", line 896, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\engine\create.py", line 643, in connect
    return dialect.connect(*cargs, **cparams)
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 617, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)
sqlite3.OperationalError: unable to open database file

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "<pyshell#3>", line 1, in <module>
    conn = engine.connect()
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 3280, in connect
    return self._connection_cls(self)
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 148, in __init__
    Connection._handle_dbapi_exception_noconnection(
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2444, in _handle_dbapi_exception_noconnection
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 146, in __init__
    self._dbapi_connection = engine.raw_connection()
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 3304, in raw_connection
    return self.pool.connect()
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\pool\base.py", line 449, in connect
    return _ConnectionFairy._checkout(self)
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\pool\base.py", line 1263, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\pool\base.py", line 712, in checkout
    rec = pool._do_get()
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\pool\impl.py", line 179, in _do_get
    with util.safe_reraise():
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\pool\impl.py", line 177, in _do_get
    return self._create_connection()
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\pool\base.py", line 390, in _create_connection
    return _ConnectionRecord(self)
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\pool\base.py", line 674, in __init__
    self.__connect()
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\pool\base.py", line 900, in __connect
    with util.safe_reraise():
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\pool\base.py", line 896, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\engine\create.py", line 643, in connect
    return dialect.connect(*cargs, **cparams)
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 617, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) unable to open database file
(Background on this error at: https://sqlalche.me/e/20/e3q8)
engine = create_engine("sqlite:///./data/books.db", echo=True)
conn = engine.connect()

================================ RESTART: Shell ================================
from sqlalchemy import create_engine
engine = create_engine("sqlite:///./data/books.db", echo=True)
conn = engine.connect()
# MetaData
from sqlachemy import MetaData, Table
Traceback (most recent call last):
  File "<pyshell#10>", line 1, in <module>
    from sqlachemy import MetaData, Table
ModuleNotFoundError: No module named 'sqlachemy'
from sqlalchemy import MetaData, Table
metadata = MetaData()
author_table = Table("author", metadata, autoload_with=engine)
2024-04-01 06:53:14,083 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-04-01 06:53:14,093 INFO sqlalchemy.engine.Engine PRAGMA main.table_xinfo("author")
2024-04-01 06:53:14,098 INFO sqlalchemy.engine.Engine [raw sql] ()
2024-04-01 06:53:14,105 INFO sqlalchemy.engine.Engine SELECT sql FROM  (SELECT * FROM sqlite_master UNION ALL   SELECT * FROM sqlite_temp_master) WHERE name = ? AND type in ('table', 'view')
2024-04-01 06:53:14,111 INFO sqlalchemy.engine.Engine [raw sql] ('author',)
2024-04-01 06:53:14,125 INFO sqlalchemy.engine.Engine PRAGMA main.foreign_key_list("author")
2024-04-01 06:53:14,135 INFO sqlalchemy.engine.Engine [raw sql] ()
2024-04-01 06:53:14,141 INFO sqlalchemy.engine.Engine PRAGMA temp.foreign_key_list("author")
2024-04-01 06:53:14,146 INFO sqlalchemy.engine.Engine [raw sql] ()
2024-04-01 06:53:14,151 INFO sqlalchemy.engine.Engine SELECT sql FROM  (SELECT * FROM sqlite_master UNION ALL   SELECT * FROM sqlite_temp_master) WHERE name = ? AND type in ('table', 'view')
2024-04-01 06:53:14,156 INFO sqlalchemy.engine.Engine [raw sql] ('author',)
2024-04-01 06:53:14,164 INFO sqlalchemy.engine.Engine PRAGMA main.index_list("author")
2024-04-01 06:53:14,169 INFO sqlalchemy.engine.Engine [raw sql] ()
2024-04-01 06:53:14,175 INFO sqlalchemy.engine.Engine PRAGMA temp.index_list("author")
2024-04-01 06:53:14,181 INFO sqlalchemy.engine.Engine [raw sql] ()
2024-04-01 06:53:14,186 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("author")
2024-04-01 06:53:14,191 INFO sqlalchemy.engine.Engine [raw sql] ()
2024-04-01 06:53:14,197 INFO sqlalchemy.engine.Engine PRAGMA main.index_list("author")
2024-04-01 06:53:14,202 INFO sqlalchemy.engine.Engine [raw sql] ()
2024-04-01 06:53:14,206 INFO sqlalchemy.engine.Engine PRAGMA temp.index_list("author")
2024-04-01 06:53:14,211 INFO sqlalchemy.engine.Engine [raw sql] ()
2024-04-01 06:53:14,214 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("author")
2024-04-01 06:53:14,218 INFO sqlalchemy.engine.Engine [raw sql] ()
2024-04-01 06:53:14,222 INFO sqlalchemy.engine.Engine SELECT sql FROM  (SELECT * FROM sqlite_master UNION ALL   SELECT * FROM sqlite_temp_master) WHERE name = ? AND type in ('table', 'view')
2024-04-01 06:53:14,227 INFO sqlalchemy.engine.Engine [raw sql] ('author',)
2024-04-01 06:53:14,232 INFO sqlalchemy.engine.Engine ROLLBACK
author_table
Table('author', MetaData(), Column('author_id', INTEGER(), table=<author>, primary_key=True, nullable=False), Column('first_name', VARCHAR(), table=<author>), Column('last_name', VARCHAR(), table=<author>), schema=None)
print(author_table)
author
# Select
from sqlalchemy import select
stmt = select(author_table).where(author_table.c.first_name == "Stephen")
stmt
<sqlalchemy.sql.selectable.Select object at 0x00000219EAF97770>
print(stmt)
SELECT author.author_id, author.first_name, author.last_name 
FROM author 
WHERE author.first_name = :first_name_1
result = conn.execute(stmt)
2024-04-01 07:02:17,033 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-04-01 07:02:17,065 INFO sqlalchemy.engine.Engine SELECT author.author_id, author.first_name, author.last_name 
FROM author 
WHERE author.first_name = ?
2024-04-01 07:02:17,072 INFO sqlalchemy.engine.Engine [generated in 0.03939s] ('Stephen',)
print(result.all())
[]
conn.close()
2024-04-01 07:05:39,473 INFO sqlalchemy.engine.Engine ROLLBACK
conn = engine.connect()
result = conn.execute(stmt)
2024-04-01 07:11:07,486 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-04-01 07:11:07,546 INFO sqlalchemy.engine.Engine SELECT author.author_id, author.first_name, author.last_name 
FROM author 
WHERE author.first_name = ?
2024-04-01 07:11:07,552 INFO sqlalchemy.engine.Engine [cached since 530.5s ago] ('Stephen',)
print(stmt.all())
Traceback (most recent call last):
  File "<pyshell#28>", line 1, in <module>
    print(stmt.all())
AttributeError: 'Select' object has no attribute 'all'
print(result.all())
[(5, 'Stephen', 'King')]
print(select(author_table))
SELECT author.author_id, author.first_name, author.last_name 
FROM author
print(select(author_table).where(author_table.c.last_name == "King"))
SELECT author.author_id, author.first_name, author.last_name 
FROM author 
WHERE author.last_name = :last_name_1
print(select(author_table).where(author_table.c.first_name > "C"))
SELECT author.author_id, author.first_name, author.last_name 
FROM author 
WHERE author.first_name > :first_name_1
stmt = select(author_table).where(author_table.c.first_name > "C")
resutl = conn.execute(stmt)
2024-04-01 07:19:24,743 INFO sqlalchemy.engine.Engine SELECT author.author_id, author.first_name, author.last_name 
FROM author 
WHERE author.first_name > ?
2024-04-01 07:19:24,803 INFO sqlalchemy.engine.Engine [generated in 0.06083s] ('C',)
print(resutl.all())
[(1, 'Isaac', 'Asimov'), (2, 'Pearl', 'Buck'), (3, 'Tom', 'Clancy'), (4, 'Tom', 'Clancy'), (5, 'Stephen', 'King')]
dir(select)
['__annotations__', '__builtins__', '__call__', '__class__', '__closure__', '__code__', '__defaults__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__get__', '__getattribute__', '__getstate__', '__globals__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__kwdefaults__', '__le__', '__lt__', '__module__', '__name__', '__ne__', '__new__', '__qualname__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__type_params__']
print(select(author_table).where(author_table.l_name > "C"))
Traceback (most recent call last):
  File "<pyshell#37>", line 1, in <module>
    print(select(author_table).where(author_table.l_name > "C"))
AttributeError: 'Table' object has no attribute 'l_name'. Did you mean: 'name'?
print(select(author_table).where(author_table.c.l_name > "C"))
Traceback (most recent call last):
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\sql\base.py", line 1617, in __getattr__
    return self._index[key][1]
KeyError: 'l_name'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "<pyshell#38>", line 1, in <module>
    print(select(author_table).where(author_table.c.l_name > "C"))
  File "C:\Users\Covert\Documents\GitHub\.venv\Lib\site-packages\sqlalchemy\sql\base.py", line 1619, in __getattr__
    raise AttributeError(key) from err
AttributeError: l_name
print(select(author_table).where(author_table.c.last_name > "C"))
SELECT author.author_id, author.first_name, author.last_name 
FROM author 
WHERE author.last_name > :last_name_1
stmt = select(author_table).where(author_table.c.last_name > "C")
result = conn.execute(stmt)
2024-04-01 07:23:39,502 INFO sqlalchemy.engine.Engine SELECT author.author_id, author.first_name, author.last_name 
FROM author 
WHERE author.last_name > ?
2024-04-01 07:23:39,565 INFO sqlalchemy.engine.Engine [generated in 0.06352s] ('C',)
print(result.all())
[(3, 'Tom', 'Clancy'), (4, 'Tom', 'Clancy'), (5, 'Stephen', 'King')]
print(result.all())
[]
stmt
<sqlalchemy.sql.selectable.Select object at 0x00000219EB00BE60>
str(stmt)
'SELECT author.author_id, author.first_name, author.last_name \nFROM author \nWHERE author.last_name > :last_name_1'
compiled = stmt.compile()
stmt
<sqlalchemy.sql.selectable.Select object at 0x00000219EB00BE60>
str(compiled)
'SELECT author.author_id, author.first_name, author.last_name \nFROM author \nWHERE author.last_name > :last_name_1'
compiled
<sqlalchemy.sql.compiler.StrSQLCompiler object at 0x00000219EB009E20>
compiled.params
{'last_name_1': 'C'}
stmt.params
<bound method ClauseElement.params of <sqlalchemy.sql.selectable.Select object at 0x00000219EB00BE60>>
compiled.params
{'last_name_1': 'C'}
result = conn.execute(compiled)
2024-04-01 07:30:16,479 INFO sqlalchemy.engine.Engine SELECT author.author_id, author.first_name, author.last_name 
FROM author 
WHERE author.last_name > :last_name_1
2024-04-01 07:30:16,542 INFO sqlalchemy.engine.Engine [caching disabled 209.42857s] {'last_name_1': 'C'}
print(result.all())
[(3, 'Tom', 'Clancy'), (4, 'Tom', 'Clancy'), (5, 'Stephen', 'King')]
stmt = select(author_table).where(author_table.c.last_name > "B", author_table.c.first_name > "S")
result = conn.execute(stmt)
2024-04-01 07:32:49,697 INFO sqlalchemy.engine.Engine SELECT author.author_id, author.first_name, author.last_name 
FROM author 
WHERE author.last_name > ? AND author.first_name > ?
2024-04-01 07:32:49,743 INFO sqlalchemy.engine.Engine [generated in 0.04502s] ('B', 'S')
print(result.all())
[(3, 'Tom', 'Clancy'), (4, 'Tom', 'Clancy'), (5, 'Stephen', 'King')]
from sqlalchemy import insert
stmt = insert(author_table).value(first_name="Richard", last_name="Bachman")
Traceback (most recent call last):
  File "<pyshell#59>", line 1, in <module>
    stmt = insert(author_table).value(first_name="Richard", last_name="Bachman")
AttributeError: 'Insert' object has no attribute 'value'. Did you mean: 'values'?
stmt = insert(author_table).values(first_name="Richard", last_name="Bachman")
str(stmt)
'INSERT INTO author (first_name, last_name) VALUES (:first_name, :last_name)'
compiled = stmt.compile()
str(compiled)
'INSERT INTO author (first_name, last_name) VALUES (:first_name, :last_name)'
compiled.params
{'first_name': 'Richard', 'last_name': 'Bachman'}
conn.execute(stmt)
2024-04-01 07:39:47,529 INFO sqlalchemy.engine.Engine INSERT INTO author (first_name, last_name) VALUES (?, ?)
2024-04-01 07:39:47,590 INFO sqlalchemy.engine.Engine [generated in 0.06095s] ('Richard', 'Bachman')
<sqlalchemy.engine.cursor.CursorResult object at 0x00000219EB079A90>
conn.execute(select * from author)
SyntaxError: invalid syntax
conn.execute(select(author_table)).all()
2024-04-01 07:40:55,342 INFO sqlalchemy.engine.Engine SELECT author.author_id, author.first_name, author.last_name 
FROM author
2024-04-01 07:40:55,351 INFO sqlalchemy.engine.Engine [generated in 0.00961s] ()
[(1, 'Isaac', 'Asimov'), (2, 'Pearl', 'Buck'), (3, 'Tom', 'Clancy'), (4, 'Tom', 'Clancy'), (5, 'Stephen', 'King'), (6, 'Richard', 'Bachman')]
result = conn.execute(
    insert(author_table),
           [{"first_name":"John", "last_name":"Le Carre"}, {"first_name":"Alex", "last_name":"Michaelides"}])
2024-04-01 07:46:26,123 INFO sqlalchemy.engine.Engine INSERT INTO author (first_name, last_name) VALUES (?, ?)
2024-04-01 07:46:26,142 INFO sqlalchemy.engine.Engine [generated in 0.02003s] [('John', 'Le Carre'), ('Alex', 'Michaelides')]
result = conn.execute(select(author_table))
2024-04-01 07:47:13,791 INFO sqlalchemy.engine.Engine SELECT author.author_id, author.first_name, author.last_name 
FROM author
2024-04-01 07:47:13,830 INFO sqlalchemy.engine.Engine [cached since 378.5s ago] ()
print(result.all())
[(1, 'Isaac', 'Asimov'), (2, 'Pearl', 'Buck'), (3, 'Tom', 'Clancy'), (4, 'Tom', 'Clancy'), (5, 'Stephen', 'King'), (6, 'Richard', 'Bachman'), (7, 'John', 'Le Carre'), (8, 'Alex', 'Michaelides')]
result = conn.execute(select(author_table)).all()
2024-04-01 07:48:11,075 INFO sqlalchemy.engine.Engine SELECT author.author_id, author.first_name, author.last_name 
FROM author
2024-04-01 07:48:11,085 INFO sqlalchemy.engine.Engine [cached since 435.7s ago] ()
print(result.all())
Traceback (most recent call last):
  File "<pyshell#84>", line 1, in <module>
    print(result.all())
AttributeError: 'list' object has no attribute 'all'
print(resutl)
<sqlalchemy.engine.cursor.CursorResult object at 0x00000219EB028670>
print(result)
[(1, 'Isaac', 'Asimov'), (2, 'Pearl', 'Buck'), (3, 'Tom', 'Clancy'), (4, 'Tom', 'Clancy'), (5, 'Stephen', 'King'), (6, 'Richard', 'Bachman'), (7, 'John', 'Le Carre'), (8, 'Alex', 'Michaelides')]
conn.commit()
2024-04-01 07:55:45,771 INFO sqlalchemy.engine.Engine COMMIT
conn.execute(select(author_table).all())
Traceback (most recent call last):
  File "<pyshell#88>", line 1, in <module>
    conn.execute(select(author_table).all())
AttributeError: 'Select' object has no attribute 'all'
conn.execute(select(author_table)).all()
2024-04-01 07:56:37,477 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-04-01 07:56:37,517 INFO sqlalchemy.engine.Engine SELECT author.author_id, author.first_name, author.last_name 
FROM author
2024-04-01 07:56:37,522 INFO sqlalchemy.engine.Engine [cached since 942.2s ago] ()
[(1, 'Isaac', 'Asimov'), (2, 'Pearl', 'Buck'), (3, 'Tom', 'Clancy'), (4, 'Tom', 'Clancy'), (5, 'Stephen', 'King'), (6, 'Richard', 'Bachman'), (7, 'John', 'Le Carre'), (8, 'Alex', 'Michaelides')]
# Update
from sqlalchemy import update
stmt = select(author_table).where(author_table.c.last_name == "King").values(first_name = 'Stephen "The Ruller"')
Traceback (most recent call last):
  File "<pyshell#92>", line 1, in <module>
    stmt = select(author_table).where(author_table.c.last_name == "King").values(first_name = 'Stephen "The Ruller"')
AttributeError: 'Select' object has no attribute 'values'
stmt = update(author_table).where(author_table.c.last_name == "King").values(first_name = 'Stephen "The Ruller"')
conn.execute(stmt)
2024-04-01 08:01:42,285 INFO sqlalchemy.engine.Engine UPDATE author SET first_name=? WHERE author.last_name = ?
2024-04-01 08:01:42,293 INFO sqlalchemy.engine.Engine [generated in 0.00790s] ('Stephen "The Ruller"', 'King')
<sqlalchemy.engine.cursor.CursorResult object at 0x00000219EB079320>
select(author_table).all()
Traceback (most recent call last):
  File "<pyshell#95>", line 1, in <module>
    select(author_table).all()
AttributeError: 'Select' object has no attribute 'all'
conn.execute(select(author_table)).all()
  
2024-04-01 08:02:49,846 INFO sqlalchemy.engine.Engine SELECT author.author_id, author.first_name, author.last_name 
FROM author
2024-04-01 08:02:49,893 INFO sqlalchemy.engine.Engine [cached since 1315s ago] ()
[(1, 'Isaac', 'Asimov'), (2, 'Pearl', 'Buck'), (3, 'Tom', 'Clancy'), (4, 'Tom', 'Clancy'), (5, 'Stephen "The Ruller"', 'King'), (6, 'Richard', 'Bachman'), (7, 'John', 'Le Carre'), (8, 'Alex', 'Michaelides')]
conn.rollback()
  
2024-04-01 08:03:44,332 INFO sqlalchemy.engine.Engine ROLLBACK
conn.execute(select(author_table)).all()
  
2024-04-01 08:03:53,518 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-04-01 08:03:53,568 INFO sqlalchemy.engine.Engine SELECT author.author_id, author.first_name, author.last_name 
FROM author
2024-04-01 08:03:53,574 INFO sqlalchemy.engine.Engine [cached since 1378s ago] ()
[(1, 'Isaac', 'Asimov'), (2, 'Pearl', 'Buck'), (3, 'Tom', 'Clancy'), (4, 'Tom', 'Clancy'), (5, 'Stephen', 'King'), (6, 'Richard', 'Bachman'), (7, 'John', 'Le Carre'), (8, 'Alex', 'Michaelides')]
# Delete
  
from sqlalchemy import delete
  
stmt = delete(author_table).where(author_table.c.author_id = 4, author_table.c.author_id = 7)
  
SyntaxError: expression cannot contain assignment, perhaps you meant "=="?
stmt = delete(author_table).where(author_table.c.author_id == 4, author_table.c.author_id == 7)
  
conn.execute(select(author_table)).all()
  
2024-04-01 08:07:12,866 INFO sqlalchemy.engine.Engine SELECT author.author_id, author.first_name, author.last_name 
FROM author
2024-04-01 08:07:12,879 INFO sqlalchemy.engine.Engine [cached since 1578s ago] ()
[(1, 'Isaac', 'Asimov'), (2, 'Pearl', 'Buck'), (3, 'Tom', 'Clancy'), (4, 'Tom', 'Clancy'), (5, 'Stephen', 'King'), (6, 'Richard', 'Bachman'), (7, 'John', 'Le Carre'), (8, 'Alex', 'Michaelides')]
conn.execute(stmt)
  
2024-04-01 08:07:46,410 INFO sqlalchemy.engine.Engine DELETE FROM author WHERE author.author_id = ? AND author.author_id = ?
2024-04-01 08:07:46,460 INFO sqlalchemy.engine.Engine [generated in 0.04969s] (4, 7)
<sqlalchemy.engine.cursor.CursorResult object at 0x00000219EB079320>
conn.execute(select(author_table)).all()
  
2024-04-01 08:07:51,766 INFO sqlalchemy.engine.Engine SELECT author.author_id, author.first_name, author.last_name 
FROM author
2024-04-01 08:07:51,822 INFO sqlalchemy.engine.Engine [cached since 1616s ago] ()
[(1, 'Isaac', 'Asimov'), (2, 'Pearl', 'Buck'), (3, 'Tom', 'Clancy'), (4, 'Tom', 'Clancy'), (5, 'Stephen', 'King'), (6, 'Richard', 'Bachman'), (7, 'John', 'Le Carre'), (8, 'Alex', 'Michaelides')]
stmt = delete(author_table).where(author_table.c.author_id == 8)
...   
>>> conn.execute(stmt)
...   
2024-04-01 08:09:16,127 INFO sqlalchemy.engine.Engine DELETE FROM author WHERE author.author_id = ?
2024-04-01 08:09:16,184 INFO sqlalchemy.engine.Engine [generated in 0.05713s] (8,)
<sqlalchemy.engine.cursor.CursorResult object at 0x00000219EB079B00>
>>> conn.execute(select(author_table)).all()
...   
2024-04-01 08:09:44,942 INFO sqlalchemy.engine.Engine SELECT author.author_id, author.first_name, author.last_name 
FROM author
2024-04-01 08:09:44,996 INFO sqlalchemy.engine.Engine [cached since 1730s ago] ()
[(1, 'Isaac', 'Asimov'), (2, 'Pearl', 'Buck'), (3, 'Tom', 'Clancy'), (4, 'Tom', 'Clancy'), (5, 'Stephen', 'King'), (6, 'Richard', 'Bachman'), (7, 'John', 'Le Carre')]
>>> stmt = delete(author_table).where(author_table.c.author_id == 4)
...   

>>> conn.execute(stmt)
...   
2024-04-01 08:10:19,114 INFO sqlalchemy.engine.Engine DELETE FROM author WHERE author.author_id = ?
2024-04-01 08:10:19,169 INFO sqlalchemy.engine.Engine [cached since 63.04s ago] (4,)
<sqlalchemy.engine.cursor.CursorResult object at 0x00000219EB079B00>
>>> conn.execute(select(author_table)).all()
...   
2024-04-01 08:10:22,924 INFO sqlalchemy.engine.Engine SELECT author.author_id, author.first_name, author.last_name 
FROM author
2024-04-01 08:10:22,980 INFO sqlalchemy.engine.Engine [cached since 1768s ago] ()
[(1, 'Isaac', 'Asimov'), (2, 'Pearl', 'Buck'), (3, 'Tom', 'Clancy'), (5, 'Stephen', 'King'), (6, 'Richard', 'Bachman'), (7, 'John', 'Le Carre')]
>>> conn.rollback()
...   
2024-04-01 08:11:18,325 INFO sqlalchemy.engine.Engine ROLLBACK
>>> conn.execute(select(author_table)).all()
...   
2024-04-01 08:11:31,753 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2024-04-01 08:11:31,770 INFO sqlalchemy.engine.Engine SELECT author.author_id, author.first_name, author.last_name 
FROM author
2024-04-01 08:11:31,776 INFO sqlalchemy.engine.Engine [cached since 1836s ago] ()
[(1, 'Isaac', 'Asimov'), (2, 'Pearl', 'Buck'), (3, 'Tom', 'Clancy'), (4, 'Tom', 'Clancy'), (5, 'Stephen', 'King'), (6, 'Richard', 'Bachman'), (7, 'John', 'Le Carre'), (8, 'Alex', 'Michaelides')]
